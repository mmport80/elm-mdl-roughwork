Elm.Material = Elm.Material || {};
Elm.Material.Style = Elm.Material.Style || {};
Elm.Material.Style.make = function (_elm) {
   "use strict";
   _elm.Material = _elm.Material || {};
   _elm.Material.Style = _elm.Material.Style || {};
   if (_elm.Material.Style.values) return _elm.Material.Style.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $String = Elm.String.make(_elm);
   var _op = {};
   var stylesheet = function (css) {    return A3($Html.node,"style",_U.list([]),_U.list([$Html.text(css)]));};
   var collect1 = F2(function (style,_p0) {
      var _p1 = _p0;
      var _p3 = _p1;
      var _p2 = style;
      switch (_p2.ctor)
      {case "Class": return _U.update(_p3,{classes: A2($List._op["::"],_p2._0,_p1.classes)});
         case "CSS": return _U.update(_p3,{css: A2($List._op["::"],_p2._0,_p1.css)});
         case "Attr": return _U.update(_p3,{attrs: A2($List._op["::"],_p2._0,_p1.attrs)});
         case "Multiple": return A3($List.foldl,collect1,_p3,_p2._0);
         default: return _p3;}
   });
   var collect = A2($List.foldl,collect1,{classes: _U.list([]),css: _U.list([]),attrs: _U.list([])});
   var styled = F3(function (ctor,styles,attrs$) {
      var _p4 = collect(styles);
      var classes = _p4.classes;
      var css = _p4.css;
      var attrs = _p4.attrs;
      return ctor(A2($List._op["::"],
      $Html$Attributes.style(css),
      A2($List._op["::"],$Html$Attributes.$class(A2($String.join," ",classes)),A2($List.append,attrs,attrs$))));
   });
   var div = F2(function (styles,elems) {    return A4(styled,$Html.div,styles,_U.list([]),elems);});
   var span = F2(function (styles,elems) {    return A4(styled,$Html.span,styles,_U.list([]),elems);});
   var Summary = F3(function (a,b,c) {    return {attrs: a,classes: b,css: c};});
   var NOP = {ctor: "NOP"};
   var nop = NOP;
   var Multiple = function (a) {    return {ctor: "Multiple",_0: a};};
   var multiple = function (styles) {    return Multiple(styles);};
   var Attr = function (a) {    return {ctor: "Attr",_0: a};};
   var attribute = function (attr) {    return Attr(attr);};
   var CSS = function (a) {    return {ctor: "CSS",_0: a};};
   var css = F2(function (key,value) {    return CSS({ctor: "_Tuple2",_0: key,_1: value});});
   var css$ = F3(function (key,value,b) {    return b ? CSS({ctor: "_Tuple2",_0: key,_1: value}) : NOP;});
   var Class = function (a) {    return {ctor: "Class",_0: a};};
   var cs = function (c) {    return Class(c);};
   var cs$ = F2(function (c,b) {    return b ? Class(c) : NOP;});
   return _elm.Material.Style.values = {_op: _op
                                       ,cs: cs
                                       ,cs$: cs$
                                       ,css: css
                                       ,css$: css$
                                       ,attribute: attribute
                                       ,multiple: multiple
                                       ,styled: styled
                                       ,div: div
                                       ,span: span
                                       ,stylesheet: stylesheet};
};