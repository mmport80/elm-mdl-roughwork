Elm.Material = Elm.Material || {};
Elm.Material.Scheme = Elm.Material.Scheme || {};
Elm.Material.Scheme.make = function (_elm) {
   "use strict";
   _elm.Material = _elm.Material || {};
   _elm.Material.Scheme = _elm.Material.Scheme || {};
   if (_elm.Material.Scheme.values) return _elm.Material.Scheme.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $List = Elm.List.make(_elm),
   $Material$Color = Elm.Material.Color.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $String = Elm.String.make(_elm);
   var _op = {};
   var scheme = F2(function (primary,accent) {
      return A2($String.join,
      "\n",
      A2($List.map,
      function (url) {
         return A2($Basics._op["++"],"@import url(",A2($Basics._op["++"],url,");"));
      },
      _U.list([A2($Basics._op["++"],"https://code.getmdl.io/1.1.3/",A2($Material$Color.scheme,primary,accent))
              ,"https://fonts.googleapis.com/icon?family=Material+Icons"
              ,"https://fonts.googleapis.com/css?family=Roboto:400,300,500|Roboto+Mono|Roboto+Condensed:400,700&subset=latin,latin-ext"])));
   });
   var topWithScheme = F3(function (primary,accent,content) {
      return A2($Html.div,
      _U.list([]),
      _U.list([A3($Html.node,"style",_U.list([$Html$Attributes.type$("text/css")]),_U.list([$Html.text(A2(scheme,primary,accent))])),content]));
   });
   var top = function (content) {    return A3(topWithScheme,$Material$Color.Grey,$Material$Color.Grey,content);};
   return _elm.Material.Scheme.values = {_op: _op,topWithScheme: topWithScheme,top: top};
};